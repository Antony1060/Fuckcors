name: "CI/CD Pipeline"

on:
  push:
    branches:
      - "**"

jobs:
  tests:
    name: "🧪 Integration test"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Set up Node.js v14"
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'yarn'

      - name: "Install dependencies"
        run: "yarn install"
      
      - name: "Run tests"
        run: "yarn test"
  build:
    name: "🐳 Build"
    runs-on: ubuntu-latest
    needs: ["tests"]
    if:
      "contains('
        refs/heads/master
        refs/heads/development
      ', github.ref)"
    steps:
    - name: "Checkout code"
      uses: actions/checkout@v2

    - name: "Login to Docker"
      run: "echo '${{ secrets.DOCKERHUB_PASSWORD }}' | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin"

    - name: "Build and Push (:dev)"
      if: github.ref == 'refs/heads/development'
      run: "docker build -t antony1060/fuckcors:dev . && docker push antony1060/fuckcors:dev"

    - name: "Build and Push (:latest)"
      if: github.ref == 'refs/heads/master'
      run: "docker build -t antony1060/fuckcors:latest . && docker push antony1060/fuckcors:latest"
  release:
    name: "🚚 Release"
    runs-on: ubuntu-latest
    needs: ["build"]
    if:
      "contains('
        refs/heads/master
        refs/heads/development
      ', github.ref)"
    steps:
    - name: "Set up kubectl"
      uses: azure/setup-kubectl@v1
    
    - name: "Copy kubernetes config"
      run: "mkdir ~/.kube && echo '${{ secrets.KUBE_CONFIG }}' | base64 -d > ~/.kube/config && KUBECONFIG=~/.kube/config"

    - name: "Rollout an application update (:dev)"
      if: github.ref == 'refs/heads/development'
      run: "kubectl rollout restart -n fuckcors deployment fuckcors-dev"

    - name: "Rollout an application update (:latest)"
      if: github.ref == 'refs/heads/master'
      run: "kubectl rollout restart -n fuckcors deployment fuckcors"